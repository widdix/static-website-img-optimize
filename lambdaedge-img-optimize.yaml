---
# Copyright 2018 widdix GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Static Website: Image optimization, a cloudonaut.io template'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'Operational Parameters'
      Parameters:
      - LogsRetentionInDays
Parameters:
  LogsRetentionInDays:
    Description: 'Specifies the number of days you want to retain log events in the specified log group.'
    Type: Number
    Default: 14
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]
Resources:
  Role:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - 'lambda.amazonaws.com'
            - 'edgelambda.amazonaws.com'
          Action: 'sts:AssumeRole'
      Policies:
      - PolicyName: lambda
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - 'logs:CreateLogGroup' # FIXME is this really needed for @Edge?
            - 'logs:CreateLogStream'
            - 'logs:PutLogEvents'
            Resource: '*' # FIXME is this really needed for @Edge
          - Effect: Allow
            Action:
            - 's3:GetObject'
            - 's3:ListBucket' # needed to get NoSuchKey instead of AccessDenie error when object does not exist
            Resource: '*' # FIXME restrict
  OriginRequestFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code: './lambda-src/' # If you change the code, rename the logical id OriginRequestVersionVX to trigger a new version creation!
      Handler: 'lambda.handler'
      MemorySize: 1536
      Role: !GetAtt 'Role.Arn'
      Runtime: 'nodejs10.x'
      Timeout: 30
  OriginRequestVersionV1:
    Type: 'AWS::Lambda::Version'
    Properties:
      FunctionName: !Ref OriginRequestFunction
  OriginRequestLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub '/aws/lambda/${OriginRequestFunction}'
      RetentionInDays: !Ref LogsRetentionInDays
Outputs:
  StackName:
    Description: 'Stack name.'
    Value: !Sub '${AWS::StackName}'
  OriginRequestLambdaEdgeFunctionVersionARN:
    Description: 'Version ARN of Lambda@Edge origin request function.'
    Value: !Ref OriginRequestVersionV1
